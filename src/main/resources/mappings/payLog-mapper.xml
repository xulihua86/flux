<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.github.flux.mapper.PayLogMapper" >

  <resultMap id="BaseResultMap" type="com.github.flux.entity.PayLog" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="tran_no" property="tranNo" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    log_id logId, tran_no tranNo, order_id orderId, price, status, create_time createTime
  </sql>
  
   <select id="query" resultType="PayLog" parameterType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from pay_log
		<where>
			
		</where>
		order by create_time desc
	</select>

	<select id="queryAll" resultType="PayLog">
		select
		<include refid="Base_Column_List" />
		from pay_log
		order by create_time desc
	</select>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pay_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>

  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from pay_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  
  <insert id="add" parameterType="com.github.flux.entity.PayLog" useGeneratedKeys="true" keyProperty="log_id">
    
    insert into pay_log (log_id, tran_no, order_id, 
      price, status, create_time
      )
    values (#{logId,jdbcType=BIGINT}, #{tranNo,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{price,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}
      )
  </insert>
  
  <update id="update" parameterType="com.github.flux.entity.PayLog" >
    update pay_log
    <set >
      <if test="tranNo != null" >
        tran_no = #{tranNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  
</mapper>