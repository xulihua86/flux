<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.flux.mapper.AccountLogMapper" >

  <resultMap id="BaseResultMap" type="com.github.flux.entity.AccountLog" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="addorsub" property="addorsub" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="descn" property="descn" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    log_id logId, userid, addorsub, num, create_time createTime, descn
  </sql>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from account_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  
  <insert id="add" parameterType="com.github.flux.entity.AccountLog" useGeneratedKeys="true" keyProperty="log_id" >
    insert into account_log (userid, addorsub, 
      num, create_time, descn
      )
    values (#{userid,jdbcType=BIGINT}, #{addorsub,jdbcType=INTEGER}, 
      #{num,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{descn,jdbcType=VARCHAR}
      )
  </insert>
  
  
  <select id="query" resultType="AccountLog" parameterType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from account_log
		<where>
			
		</where>
		order by create_time desc
	</select>

	<select id="queryAll" resultType="User">
		select
		<include refid="Base_Column_List" />
		from account_log
		order by create_time desc
	</select>
	
 
  <update id="update" parameterType="com.github.flux.entity.AccountLog" >
    update account_log
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="addorsub != null" >
        addorsub = #{addorsub,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="descn != null" >
        descn = #{descn,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  
  
   
  <insert id="insertSelective" parameterType="com.github.flux.entity.AccountLog" >
    insert into account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="addorsub != null" >
        addorsub,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="descn != null" >
        descn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="addorsub != null" >
        #{addorsub,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="descn != null" >
        #{descn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
</mapper>