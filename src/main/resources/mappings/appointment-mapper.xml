<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.flux.mapper.AppointmentMapper" >

  <resultMap id="BaseResultMap" type="com.github.flux.entity.Appointment" >
    <id column="appointment_id" property="appointmentId" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="target_num" property="targetNum" jdbcType="BIGINT" />
    <result column="begin_time" property="beginTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="standard" property="standard" jdbcType="VARCHAR" />
    <result column="declaration" property="declaration" jdbcType="VARCHAR" />
    <result column="flux_num" property="fluxNum" jdbcType="BIGINT" />
    <result column="only_friend" property="onlyFriend" jdbcType="INTEGER" />
    <result column="push_friend" property="pushFriend" jdbcType="INTEGER" />
    <result column="enroll_num" property="enrollNum" jdbcType="BIGINT" />
    <result column="view_num" property="viewNum" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="enroll_userids" property="enrollUserids" jdbcType="LONGVARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    appointment_id appointmentId, userid, type_id typeId, name, 
    logo, target_num targetNum, 
    begin_time beginTime, 
    end_time endTime, standard, 
    declaration, flux_num fluxNum, only_friend onlyFriend, 
    push_friend pushFriend, enroll_num enrollNum, view_num viewNum, create_time createTime, 
    status, enroll_userids enrollUserids
  </sql>


	<select id="query" resultType="Appointment" parameterType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from appointment
		<where>
			
		</where>
		order by create_time desc
	</select>

	<select id="queryAll" resultType="Appointment">
		select
		<include refid="Base_Column_List" />
		from appointment
		order by create_time desc
	</select>
	

  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from appointment
    where appointment_id = #{appointmentId,jdbcType=BIGINT}
  </select>
  
  
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from appointment
    where appointment_id = #{appointmentId,jdbcType=BIGINT}
  </delete>
  
 
  
  <update id="update" parameterType="Appointment" >
    update appointment
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="targetNum != null" >
        target_num = #{targetNum,jdbcType=BIGINT},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="standard != null" >
        standard = #{standard,jdbcType=VARCHAR},
      </if>
      <if test="declaration != null" >
        declaration = #{declaration,jdbcType=VARCHAR},
      </if>
      <if test="fluxNum != null" >
        flux_num = #{fluxNum,jdbcType=BIGINT},
      </if>
      <if test="onlyFriend != null" >
        only_friend = #{onlyFriend,jdbcType=INTEGER},
      </if>
      <if test="pushFriend != null" >
        push_friend = #{pushFriend,jdbcType=INTEGER},
      </if>
      <if test="enrollNum != null" >
        enroll_num = #{enrollNum,jdbcType=BIGINT},
      </if>
      <if test="viewNum != null" >
        view_num = #{viewNum,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="enrollUserids != null" >
        enroll_userids = #{enrollUserids,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where appointment_id = #{appointmentId,jdbcType=BIGINT}
  </update>
  
   <insert id="add" parameterType="Appointment" useGeneratedKeys="true" keyProperty="appointment_id"  >
    insert into appointment (userid, type_id, 
      name, logo, target_num, 
      begin_time, end_time, standard, 
      declaration, flux_num, only_friend, 
      push_friend, enroll_num, view_num, 
      create_time, status, enroll_userids
      )
    values (#{userid,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{targetNum,jdbcType=BIGINT}, 
      #{beginTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{standard,jdbcType=VARCHAR}, 
      #{declaration,jdbcType=VARCHAR}, #{fluxNum,jdbcType=BIGINT}, #{onlyFriend,jdbcType=INTEGER}, 
      #{pushFriend,jdbcType=INTEGER}, #{enrollNum,jdbcType=BIGINT}, #{viewNum,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{enrollUserids,jdbcType=LONGVARCHAR}
      )
  </insert>
  
</mapper>