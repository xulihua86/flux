<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.flux.mapper.AppointmentTypeMapper" >

  <resultMap id="BaseResultMap" type="com.github.flux.entity.AppointmentType" >
    <id column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="template" property="template" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    type_id typeId, name, template
  </sql>
  
  
  	<select id="query" resultType="AppointmentType" parameterType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from appointment_type
		<where>
			
		</where>
		order by type_id desc
	</select>

	<select id="queryAll" resultType="AppointmentType">
		select
		<include refid="Base_Column_List" />
		from appointment_type
		order by type_id desc
	</select>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from appointment_type
    where type_id = #{typeId,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from appointment_type
    where type_id = #{typeId,jdbcType=BIGINT}
  </delete>
  
  
  <insert id="add" parameterType="com.github.flux.entity.AppointmentType" useGeneratedKeys="true" keyProperty="type_id">
    insert into appointment_type (type_id, name, template
      )
    values (#{typeId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{template,jdbcType=VARCHAR}
      )
  </insert>
  
  <update id="update" parameterType="com.github.flux.entity.AppointmentType" >
    update appointment_type
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="template != null" >
        template = #{template,jdbcType=VARCHAR},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=BIGINT}
  </update>
  
</mapper>